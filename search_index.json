[["index.html", "Chris Crowley 1 Urban analytics", " Chris Crowley A portfolio of recent growth monitoring work 2022-07-23 1 Urban analytics I started programming in 2007, working a day job managing a team of 12 people running the Brisbane City Plan, Brisbane City, by night I would be coding until the early hours trying to learn my craft. My initial interests were in automating documentation in xquery, XSLT and XML which made it possible to automate the tedious and slow process of creating online, interactive e-plans. "],["example1.html", "2 Example A", " 2 Example A I can do a few styles of examples I can do an interactive style - where I have the code and its run live OR I can do it with text and screenshots Pictures Python You can label chapter and section titles using {#label} after them, e.g., we can reference Chapter ??. If you do not manually label them, there will be automatic labels anyway, e.g., Chapter ??. Figures and tables with captions will be placed in figure and table environments, respectively. par(mar = c(4, 4, .1, .1)) plot(pressure, type = &#39;b&#39;, pch = 19) Figure 2.1: Here is a nice figure! Reference a figure by its code chunk label with the fig: prefix, e.g., see Figure 2.1. Similarly, you can reference tables generated from knitr::kable(), e.g., see Table 2.1. knitr::kable( head(iris, 20), caption = &#39;Here is a nice table!&#39;, booktabs = TRUE ) Table 2.1: Here is a nice table! Sepal.Length Sepal.Width Petal.Length Petal.Width Species 5.1 3.5 1.4 0.2 setosa 4.9 3.0 1.4 0.2 setosa 4.7 3.2 1.3 0.2 setosa 4.6 3.1 1.5 0.2 setosa 5.0 3.6 1.4 0.2 setosa 5.4 3.9 1.7 0.4 setosa 4.6 3.4 1.4 0.3 setosa 5.0 3.4 1.5 0.2 setosa 4.4 2.9 1.4 0.2 setosa 4.9 3.1 1.5 0.1 setosa 5.4 3.7 1.5 0.2 setosa 4.8 3.4 1.6 0.2 setosa 4.8 3.0 1.4 0.1 setosa 4.3 3.0 1.1 0.1 setosa 5.8 4.0 1.2 0.2 setosa 5.7 4.4 1.5 0.4 setosa 5.4 3.9 1.3 0.4 setosa 5.1 3.5 1.4 0.3 setosa 5.7 3.8 1.7 0.3 setosa 5.1 3.8 1.5 0.3 setosa You can write citations, too. For example, we are using the bookdown package (Xie 2022) in this sample book, which was built on top of R Markdown and knitr (Xie 2015). References "],["industrial.html", "3 Industrial land availability 3.1 Organise the base data 3.2 Compile the results in R", " 3 Industrial land availability Knowing your industrial land supply: how much, where and how its changing each year ( or demand) is something most councils like to keep track of if they can. There is an expensive, time consuming way to do it: an employer spent over $300,000 and a year to answer his question. However, which shows its possible to get to the core data in less than a day, using the right data and some cool scripting. 3.1 Organise the base data The Qld State government publishes great advice on this topic. Since we really only care about land that is either being used, being partially used, or completely unused, to answer this question, lets start there. We can use aerial imagery and our latest cadastre (lot pattern) to classify lots as either Taken, Vacant or Underutilised. This takes less than a day. 3.2 Compile the results in R The most basic compilation of results is a simple table, compiled using R, summing the areas of V,U and T for each of the main industrial areas. I have taken this a lot further using RMarkDown to compile detailed reports. In fact, so much information can be pulled from such a simple GIS layer that a 100 page report is easy to fill. Because its scripted, I can update the GIS and re-run the reporting automatically to produce very rich, detailed project reporting. "],["the-benefits.html", "4 The benefits", " 4 The benefits Some councils will always prefer to spend a lot of time and money on consultancies to answer their land supply questions, because having an answer that cost a lot of money to get is seen as somehow more persuasive. But its essentially a simple question: add up the amount of land that is classified as vacant, underutilised, or taken. And that is easy using GIS and R. This process now takes my current team about a day - reusing a few simple scripts each time we do it. "],["rshiny.html", "5 Compare planning forecasts 5.1 Shiny example 5.2 Benefits", " 5 Compare planning forecasts Sometimes its necessary to compare your growth forecasts to others. You want a way to do it for different types of forecast, different geographical areas and timeframes. 5.1 Shiny example Shiny based on R lets you quickly build attractive dashboards. Heres an example of a dashboard that dynamically compares my employers growth forecasts to others by the local utility provider, the State Government and so on. The drop downs let me pick an area, whether the whole council area or a part of it, to explore. I can choose to compare dwellings, population or employment forecasts. 5.2 Benefits This is an example of how complex questions can be answered very simply and repeatably. In land use monitoring, its common for queries to come in that are about comparing one set of numbers to another and seeking the differences. This is an example of using R Shiny to answer them instantly and 100% correctly each time. "],["esridash.html", "6 Development activity Dashboard 6.1 Summarise expected versus actual growth 6.2 Summarise dwelling types", " 6 Development activity Dashboard These are some screenshots of a ESRI Dashboard I created to compare dwelling completions data to planning assumptions. A script automatically extracts and cleans approvals data from a council system and merges the data with their planning assumptions. Then its simply a matter of setting up the ESRI Dashboard from ArcGIS and publishing it in Arc GIS Online (AGOL) for the organisation view and use. 6.1 Summarise expected versus actual growth The dashboard shows, for any chosen area, how many dwellings were completed over a given time. This is then compared with what the councils planning assumptions expected. Planners and forecasters get an instant view of whether areas are growing according to expectations, or not. 6.2 Summarise dwelling types This tool also shows whether dwelling approvals match what we expect in given areas. Where lower than expected densities are being delivered, for example, can be a trigger for planners to develop new rules about densities. This is in fact one of the benefits of having regular and easily updated monitoring. "],["GMReport.html", "7 Growth Monitoring Reporting", " 7 Growth Monitoring Reporting My preferred way to build data reports is to use a tool like RMarkdown or Quarto simply because of how easy it is to build incredibly rich and complex documents that render in seconds and can be repeated as often as required, when data changes or updates. This workflow reduces workloads dramatically over time. But sometimes, working in larger planning teams, many co-workers arent comfortable with tools like these. They may prefer more familiar tools like Microsoft Word or Excel, so its important to provide a bridge between those tools and more advanced data solutions. One example of this is producing an annual Growth Monitoring Report in Microsoft Word, importing charts and figures that were generated in Python, pandas, matplotlib and plotly. Charts and figures can be generated and then imported into a Word document and supporting commentary or narrative can be added by a planner. Here are some screenshots of recent Growth Monitoring Reports I have been responsible for delivering. This type of collaboration allowed the efforts of data technical and non-data technical planners and GIS specialists to be combined effectively. "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
